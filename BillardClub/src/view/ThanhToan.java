package view;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Hashtable;
import java.util.List;
import java.util.stream.DoubleStream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DichVu;
import model.KhuyenMai;
import service.BanChoiService;
import service.ChiTietBanChoiService;
import service.DichVuService;
import service.KhuyenMaiService;
import viewModel.BanChoiViewModel;
import model.BanChoi;
import model.ChiTietBanChoi;
import model.HoaDon;
import model.HoaDonChiTiet;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import service.HoaDonChiTietService;
import service.HoaDonService;
import utility.DBContext;
import viewModel.GioHang;

public class ThanhToan extends javax.swing.JFrame {

    List<GioHang> listGH = new ArrayList<>();
    private DichVuService DVservice = new DichVuService();
    private BanChoiService bcService = new BanChoiService();
    private ChiTietBanChoiService ctbcService = new ChiTietBanChoiService();
    private HoaDonService hdService = new HoaDonService();
    private KhuyenMaiService serviceKM = new KhuyenMaiService();
    private HoaDonChiTietService hdctService = new HoaDonChiTietService();
    private KhuyenMaiService kmService = new KhuyenMaiService();
    DefaultTableModel model;
    DefaultTableModel model1;
    DefaultTableModel model2;
    DefaultTableModel model3;

    BanChoiViewModel bc = new BanChoiViewModel();

    List<GioHang> list = new ArrayList<>();
    List<GioHang> listNull = new ArrayList<>();
    List<GioHang> listTemp = new ArrayList<>();
    Double tongTien = 0.0;
    Double tongTienBan = 0.0;
    Double tongTienSauKM = 0.0;
    Double tongTienTatCa = 0.0;

    public ThanhToan(BanChoiViewModel b, String maB, List<GioHang> list) {
        initComponents();

        if (lblBanSo.getText().contains("01")) {
            listGH = QuanLyBanChoi.list;
        } else if (lblBanSo.getText().contains("02")) {
            QuanLyBanChoi.list2 = listGH;
        } else if (lblBanSo.getText().contains("03")) {
            QuanLyBanChoi.list3 = listGH;
        } else if (lblBanSo.getText().contains("04")) {
            QuanLyBanChoi.list4 = listGH;
        } else if (lblBanSo.getText().contains("05")) {
            QuanLyBanChoi.list5 = listGH;
        } else if (lblBanSo.getText().contains("06")) {
            QuanLyBanChoi.list6 = listGH;
        } else if (lblBanSo.getText().contains("07")) {
            QuanLyBanChoi.list7 = listGH;
        } else if (lblBanSo.getText().contains("08")) {
            QuanLyBanChoi.list8 = listGH;
        } else if (lblBanSo.getText().contains("09")) {
            QuanLyBanChoi.list9 = listGH;
        } else if (lblBanSo.getText().contains("10")) {
            QuanLyBanChoi.list10 = listGH;
        }

        listTemp = listGH;
        listGH = list;
        list = listTemp;

        this.setLocationRelativeTo(null);
        txtMaBan.setText(b.getMaBan());
        txtHD.setText(b.getMaHD());
        jlbThoiGianBatDau.setText(b.getTgBD());
        jlbThoiGianKetThuc.setText(b.getTgKT());
        lblBanSo.setText(maB);
        txtTongTien.setText(String.valueOf(b.getTongTien()));

        for (GioHang gioHang : list) {
            tongTien = (gioHang.getGia() * gioHang.getSoLuong());
        }
        int column = 3; // giả sử cột cần tính tổng là cột thứ 2 (đánh số từ 0)
        for (int row = 0; row < tblChiTietDV.getRowCount(); row++) {
            tongTien += Double.parseDouble(tblChiTietDV.getValueAt(row, column).toString());
        }
        tongTienBan = b.getTongTien();
        tongTienTatCa = tongTien + tongTienBan;
        lblTongTienTatCa.setText(String.valueOf(tongTienTatCa));
        loadGioHang(listGH);
        loadTableNuoc();
        loadTableGay();
        loadTableDoAn();
        tinhTienDV();
    }

    public ThanhToan() {
        initComponents();
        this.setLocationRelativeTo(null);
        loadTableNuoc();
        loadTableDoAn();
        loadTableGay();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int x = 0;
    int a = 0;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblthongbaoloi = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        lblBanSo = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtHD = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChiTietDV = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        txtTienKD = new javax.swing.JTextField();
        lblTienSauKM = new javax.swing.JLabel();
        lblTienThua = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        lblTongTienTatCa = new javax.swing.JLabel();
        jlbThoiGianBatDau = new javax.swing.JLabel();
        jlbThoiGianKetThuc = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMaBan = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblGay = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDichVuNuoc = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoAn = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1150, 800));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1150, 700));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(250, 182, 124));
        jPanel2.setPreferredSize(new java.awt.Dimension(1150, 700));

        jLabel1.setBackground(new java.awt.Color(0, 51, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Back");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        lblthongbaoloi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblthongbaoloi.setForeground(new java.awt.Color(255, 255, 255));

        jPanel13.setBackground(new java.awt.Color(255, 255, 204));
        jPanel13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel13.setPreferredSize(new java.awt.Dimension(500, 638));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel28.setText("Bàn số:");
        jPanel13.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 28, -1, -1));

        lblBanSo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblBanSo.setText("........");
        jPanel13.add(lblBanSo, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 28, -1, -1));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Mã HĐ:");
        jPanel13.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 99, -1, -1));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Thời gian bắt đầu: ");
        jPanel13.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 137, -1, -1));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Thời gian kết thúc : ");
        jPanel13.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 180, -1, -1));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("Tổng tiền :");
        jPanel13.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 232, -1, -1));

        txtHD.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHDActionPerformed(evt);
            }
        });
        jPanel13.add(txtHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 96, 130, -1));

        txtTongTien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });
        jPanel13.add(txtTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 229, 146, -1));

        tblChiTietDV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dịch Vụ", "Số Lượng", "Giá", "Thanh Tien"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChiTietDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietDVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblChiTietDV);

        jPanel13.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 258, 494, 193));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Mã giảm giá :");
        jPanel13.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, -1, -1));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel35.setText("Tiền sau khi giảm:");
        jPanel13.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, -1, -1));

        jLabel36.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel36.setText("Tiền khách đưa:");
        jPanel13.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, -1, -1));

        jLabel37.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel37.setText("Tiền thừa:");
        jPanel13.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 650, -1, -1));

        txtMaKM.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtMaKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKMActionPerformed(evt);
            }
        });
        jPanel13.add(txtMaKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 520, 125, -1));

        txtTienKD.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTienKD.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTienKDCaretUpdate(evt);
            }
        });
        txtTienKD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienKDActionPerformed(evt);
            }
        });
        jPanel13.add(txtTienKD, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 600, 125, -1));

        lblTienSauKM.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTienSauKM.setText("...................");
        jPanel13.add(lblTienSauKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 123, -1));

        lblTienThua.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTienThua.setText("....................");
        jPanel13.add(lblTienThua, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 650, 125, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_thanhtoan.png"))); // NOI18N
        jButton2.setText("Thanh toán");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, 172, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_xuathd.png"))); // NOI18N
        jButton3.setText("Xuất hóa đơn");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 610, 172, -1));

        jLabel41.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel41.setText("Tổng tiền :");
        jPanel13.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));

        lblTongTienTatCa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTongTienTatCa.setText("...................");
        jPanel13.add(lblTongTienTatCa, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, 123, -1));

        jlbThoiGianBatDau.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jlbThoiGianBatDau.setText("....");
        jPanel13.add(jlbThoiGianBatDau, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 137, 122, -1));

        jlbThoiGianKetThuc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jlbThoiGianKetThuc.setText("....");
        jPanel13.add(jlbThoiGianKetThuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 180, 124, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_apmagg.png"))); // NOI18N
        jButton1.setText("Áp mã khuyễn mãi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 540, -1, -1));

        jLabel2.setText("Ma Ban:");
        jPanel13.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 59, 47, -1));
        jPanel13.add(txtMaBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 56, 130, -1));

        jPanel14.setBackground(new java.awt.Color(255, 255, 204));
        jPanel14.setPreferredSize(new java.awt.Dimension(468, 638));

        jLabel40.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel40.setText("Dịch vụ");

        tblGay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ten", "So Luong", "Gia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGayMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblGay);

        jTabbedPane1.addTab("Thuê Gậy", jScrollPane5);

        tblDichVuNuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Số lượng", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDichVuNuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDichVuNuocMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDichVuNuoc);

        jTabbedPane1.addTab("Nước Uống", jScrollPane3);

        tblDoAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ten", "So Luong", "Gia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoAnMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblDoAn);

        jTabbedPane1.addTab("Đồ Ăn", jScrollPane4);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel40)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel40)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblthongbaoloi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblthongbaoloi, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE))))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        if (lblBanSo.getText().contains("01")) {
            QuanLyBanChoi.list = listGH;
        }
        if (lblBanSo.getText().contains("02")) {
            QuanLyBanChoi.list2 = listGH;
        }
        if (lblBanSo.getText().contains("03")) {
            QuanLyBanChoi.list3 = listGH;
        }
        if (lblBanSo.getText().contains("04")) {
            QuanLyBanChoi.list4 = listGH;
        }
        if (lblBanSo.getText().contains("05")) {
            QuanLyBanChoi.list5 = listGH;
        }
        if (lblBanSo.getText().contains("06")) {
            QuanLyBanChoi.list6 = listGH;
        }
        if (lblBanSo.getText().contains("07")) {
            QuanLyBanChoi.list7 = listGH;
        }
        if (lblBanSo.getText().contains("08")) {
            QuanLyBanChoi.list8 = listGH;
        }
        if (lblBanSo.getText().contains("09")) {
            QuanLyBanChoi.list9 = listGH;
        }
        if (lblBanSo.getText().contains("10")) {
            QuanLyBanChoi.list10 = listGH;
        }
        dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void txtHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHDActionPerformed

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongTienActionPerformed

    private void txtMaKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKMActionPerformed

    private void txtTienKDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienKDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienKDActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String tgkt = jlbThoiGianKetThuc.getText();

        if (tgkt.isBlank()) {
            JOptionPane.showMessageDialog(this, "Không thể thanh toán");
            return;
        }

        BanChoi bc = new BanChoi();
        bc.setMaBan(txtMaBan.getText());
        bc.setIdCSVC(4);
        bc.setTGBD(jlbThoiGianBatDau.getText());
        bc.setTGKT(jlbThoiGianKetThuc.getText());
        bc.setTienBan(tongTien);
        bc.setTenBan(lblBanSo.getText());
        bc.setGia(tongTien);
        bc.setTinhTrang(1);
//        BanChoi banChoi = new BanChoi();
//        System.out.println("id LA: "+banChoi.getId());

        if (bcService.CreateBanChoi(bc) == 1) {
            for (GioHang gh : listGH) {
                DichVu dv = DVservice.getID(gh.getDichVu());
                ChiTietBanChoi ctb = new ChiTietBanChoi();
                ctb.setIdBan(bcService.getIDBanChoi(txtMaBan.getText()));
                ctb.setIdDV(dv.getId());
                ctb.setSoLuong(gh.getSoLuong());
                ctb.setTinhTrang(1);
                if (ctbcService.createChiTietBanChoi(ctb) != 1) {
                    JOptionPane.showMessageDialog(this, "Sai khi tạo hóa đơn chi tiết");
                    return;
                }
            }
        }

        Calendar calendar = Calendar.getInstance();
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        int month = calendar.get(Calendar.MONTH) + 1;
        int year = calendar.get(Calendar.YEAR);
        String ngayHienTai = year + "-" + month + "-" + day;

        HoaDon hd = new HoaDon();
        hd.setIdNV(1);

        hd.setMaNV("NV01");
        hd.setMa(txtHD.getText());
        hd.setNgayTao(ngayHienTai);
        hd.setNgayThanhToan(ngayHienTai);
        hd.setTongTien(Double.parseDouble(lblTongTienTatCa.getText()));
        if (txtMaKM.getText().isBlank()) {
            hd.setMaKM(null);
            hd.setIdKM(14);
            hd.setTienSauKM(Double.parseDouble(txtTongTien.getText()));
            hd.setTienKhachDua(Double.parseDouble(txtTienKD.getText()));
            hd.setTinhTrang(1);
            if (hdService.create(hd) != 1) {
                JOptionPane.showMessageDialog(this, "Lỗi khi tạo hóa đơn");
                return;
            }

            HoaDon hoaDon = hdService.getID(txtHD.getText());
            if (hoaDon == null) {
                JOptionPane.showMessageDialog(this, "Lỗi khi lấy id hóa đơn");
                return;
            }
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setIdBan(bcService.getIDBanChoi(txtMaBan.getText()));
            hdct.setIdHD(hoaDon.getId());
            hdct.setTinhTrang(1);
            System.out.println(hdct);
            if (hdctService.createHDCT(hdct) != 1) {
                JOptionPane.showMessageDialog(this, "Lỗi khi tạo hóa đơn chi tiết");
                return;
            } else {
                if (lblBanSo.getText().contains("01")) {
                    QuanLyBanChoi.b1 = this.bc;
                    QuanLyBanChoi.list = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("02")) {
                    QuanLyBanChoi.b2 = this.bc;
                    QuanLyBanChoi.list2 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("03")) {
                    QuanLyBanChoi.b3 = this.bc;
                    QuanLyBanChoi.list3 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("04")) {
                    QuanLyBanChoi.b4 = this.bc;
                    QuanLyBanChoi.list4 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("05")) {
                    QuanLyBanChoi.b5 = this.bc;
                    QuanLyBanChoi.list5 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("06")) {
                    QuanLyBanChoi.b6 = this.bc;
                    QuanLyBanChoi.list6 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("07")) {
                    QuanLyBanChoi.b7 = this.bc;
                    QuanLyBanChoi.list7 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("08")) {
                    QuanLyBanChoi.b8 = this.bc;
                    QuanLyBanChoi.list8 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("09")) {
                    QuanLyBanChoi.b9 = this.bc;
                    QuanLyBanChoi.list9 = listNull;
                    listGH = listNull;
                }
                if (lblBanSo.getText().contains("10")) {
                    QuanLyBanChoi.b10 = this.bc;
                    QuanLyBanChoi.list10 = listNull;
                    listGH = listNull;
                }
                QuanLyBanChoi.list = listNull;
                listGH = listNull;
                JOptionPane.showMessageDialog(this, "Thanh toán thành công");

            }

            return;
        }
        KhuyenMai km = kmService.timKM(txtMaKM.getText());
        hd.setIdKM(km.getId());
        hd.setMaKM(txtMaKM.getText());
        hd.setTienSauKM(Double.parseDouble(lblTienSauKM.getText()));
        hd.setTienKhachDua(Double.parseDouble(txtTienKD.getText()));
        hd.setTinhTrang(1);
        if (hdService.create(hd) != 1) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tạo hóa đơn");
            return;
        }

        HoaDon hoaDon = hdService.getID(txtHD.getText());
        if (hoaDon == null) {
            JOptionPane.showMessageDialog(this, "Lỗi khi lấy id hóa đơn");
            return;
        }
        HoaDonChiTiet hdct = new HoaDonChiTiet();
        hdct.setIdBan(bcService.getIDBanChoi(txtMaBan.getText()));
        hdct.setIdHD(hoaDon.getId());
        hdct.setTinhTrang(1);
        System.out.println(hdct);
        if (hdctService.createHDCT(hdct) != 1) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tạo hóa đơn chi tiết");
            return;
        } else {
            if (lblBanSo.getText().contains("01")) {
                QuanLyBanChoi.b1 = this.bc;
                QuanLyBanChoi.list = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("02")) {
                QuanLyBanChoi.b2 = this.bc;
                QuanLyBanChoi.list2 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("03")) {
                QuanLyBanChoi.b3 = this.bc;
                QuanLyBanChoi.list3 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("04")) {
                QuanLyBanChoi.b4 = this.bc;
                QuanLyBanChoi.list4 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("05")) {
                QuanLyBanChoi.b5 = this.bc;
                QuanLyBanChoi.list5 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("06")) {
                QuanLyBanChoi.b6 = this.bc;
                QuanLyBanChoi.list6 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("07")) {
                QuanLyBanChoi.b7 = this.bc;
                QuanLyBanChoi.list7 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("08")) {
                QuanLyBanChoi.b8 = this.bc;
                QuanLyBanChoi.list8 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("09")) {
                QuanLyBanChoi.b9 = this.bc;
                QuanLyBanChoi.list9 = listNull;
                listGH = listNull;
            }
            if (lblBanSo.getText().contains("10")) {
                QuanLyBanChoi.b10 = this.bc;
                QuanLyBanChoi.list10 = listNull;
                listGH = listNull;
            }
            QuanLyBanChoi.list = listNull;
            listGH = listNull;
            JOptionPane.showMessageDialog(this, "Thanh toán thành công");

            loadGioHang(listNull);

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        HoaDon hoaDon = hdService.getID(txtHD.getText());
        XuatHoaDon(hoaDon.getId());
    }//GEN-LAST:event_jButton3ActionPerformed
    public void XuatHoaDon(int idhd) {
        try {

            Hashtable map = new Hashtable();
            JasperReport report = JasperCompileManager.compileReport("C:\\Users\\ADMIN\\Desktop\\BillardPolyGroup1\\BillardClub\\src\\view\\rptXuatHoaDon.jrxml");

            map.put("idHD", idhd);
            JasperPrint p = JasperFillManager.fillReport(report, map, DBContext.getConnection());
            JasperViewer.viewReport(p, false);
            JasperExportManager.exportReportToPdfFile(p, "test.pdf");
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    private void tblDichVuNuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDichVuNuocMouseClicked

        int row = tblDichVuNuoc.getSelectedRow();
        GioHang gh = new GioHang();

        DichVu dv = DVservice.getAll().get(row);

        gh.setDichVu((String) tblDichVuNuoc.getValueAt(row, 0));
        gh.setGia((Double) tblDichVuNuoc.getValueAt(row, 2));
        int soLuong = Integer.parseInt(JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng"));

        if (soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Nhập số lượng sai! Vui lòng nhập lại!!!");
            return;
        } else if (soLuong > dv.getSoLuong()) {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm trong kho không đủ!");
            return;
        }
        gh.setSoLuong(soLuong);
        for (GioHang i : listGH) {
            if (i.getDichVu().equals(gh.getDichVu())) {
                i.setSoLuong(i.getSoLuong() + gh.getSoLuong());
                loadGioHang(listGH);
                DVservice.updateSl(gh.getDichVu(), soLuong);
                loadTableNuoc();
                tinhTienDV();
                return;
            }
        }
        listGH.add(gh);
        DVservice.updateSl(gh.getDichVu(), soLuong);
        loadTableNuoc();
        loadGioHang(listGH);
        tinhTienDV();

    }//GEN-LAST:event_tblDichVuNuocMouseClicked

    private void tblDoAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoAnMouseClicked
        int row = tblDoAn.getSelectedRow();
        GioHang gh = new GioHang();

        DichVu dv = DVservice.getAll().get(row);

        gh.setDichVu((String) tblDoAn.getValueAt(row, 0));
        gh.setGia((Double) tblDoAn.getValueAt(row, 2));
        int soLuong = Integer.parseInt(JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng"));

        if (soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Nhập số lượng sai! Vui lòng nhập lại!!!");
            return;
        } else if (soLuong > dv.getSoLuong()) {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm trong kho không đủ!");
            return;
        }
        gh.setSoLuong(soLuong);
        for (GioHang i : listGH) {
            if (i.getDichVu().equals(gh.getDichVu())) {
                i.setSoLuong(i.getSoLuong() + gh.getSoLuong());
                loadGioHang(listGH);
                DVservice.updateSl(gh.getDichVu(), soLuong);
                loadTableDoAn();
                tinhTienDV();
                return;
            }
        }
        listGH.add(gh);
        DVservice.updateSl(gh.getDichVu(), soLuong);
        loadTableDoAn();
        loadGioHang(listGH);
        tinhTienDV();
    }//GEN-LAST:event_tblDoAnMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tinhTienDV();
        String maKM = txtMaKM.getText();
        if (serviceKM.timKM(maKM) != null) {
            KhuyenMai km = serviceKM.timKM(maKM);
            double phanTramKM = km.getPhanTramGiam();
            Double tong = Double.valueOf(lblTongTienTatCa.getText());
            Double tienGiam = (tong) * (phanTramKM / 100);
            tongTienSauKM = tong - tienGiam;
            lblTienSauKM.setText(String.valueOf(tongTienSauKM));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtTienKDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTienKDCaretUpdate
        if (txtMaKM.getText().isBlank()) {
            Double tienKD = Double.parseDouble(txtTienKD.getText());
            Double tienThua = tienKD - tongTienTatCa;
            lblTienThua.setText(String.valueOf(tienThua));
            return;
        } else {
            Double tienKD = Double.parseDouble(txtTienKD.getText());
            Double tienThua = tienKD - tongTienSauKM;
            lblTienThua.setText(String.valueOf(tienThua));
        }
    }//GEN-LAST:event_txtTienKDCaretUpdate

    private void tblChiTietDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietDVMouseClicked
        int row = tblChiTietDV.getSelectedRow();
        GioHang gh = listGH.get(row);
        int soLuong = Integer.parseInt(JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng"));
        if (soLuong == 0) {
            listGH.remove(gh);
            DVservice.updateSlTraHang(gh.getDichVu(), gh.getSoLuong());
            loadTableNuoc();
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            loadGioHang(listGH);
            loadTableNuoc();
            loadTableDoAn();
            loadTableGay();
            tinhTienDV();
            return;
        }
        int soDVUpdate = soLuong - gh.getSoLuong();
        DVservice.updateSl(gh.getDichVu(), soDVUpdate);
        loadTableNuoc();
        loadTableDoAn();
        loadTableGay();
        gh.setSoLuong(soLuong);
        loadGioHang(listGH);
        tinhTienDV();
    }//GEN-LAST:event_tblChiTietDVMouseClicked

    private void tblGayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGayMouseClicked
        int row = tblGay.getSelectedRow();
        GioHang gh = new GioHang();

        DichVu dv = DVservice.getAll().get(row);

        gh.setDichVu((String) tblGay.getValueAt(row, 0));
        gh.setGia((Double) tblGay.getValueAt(row, 2));
        int soLuong = Integer.parseInt(JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng"));

        if (soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Nhập số lượng sai! Vui lòng nhập lại!!!");
            return;
        } else if (soLuong > dv.getSoLuong()) {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm trong kho không đủ!");
            return;
        }
        gh.setSoLuong(soLuong);
        for (GioHang i : listGH) {
            if (i.getDichVu().equals(gh.getDichVu())) {
                i.setSoLuong(i.getSoLuong() + gh.getSoLuong());
                loadGioHang(listGH);
                DVservice.updateSl(gh.getDichVu(), soLuong);
                loadTableGay();
                tinhTienDV();
                return;
            }
        }
        listGH.add(gh);
        DVservice.updateSl(gh.getDichVu(), soLuong);
        loadTableGay();
        loadGioHang(listGH);
        tinhTienDV();
    }//GEN-LAST:event_tblGayMouseClicked

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThanhToan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jlbThoiGianBatDau;
    private javax.swing.JLabel jlbThoiGianKetThuc;
    private javax.swing.JLabel lblBanSo;
    private javax.swing.JLabel lblTienSauKM;
    private javax.swing.JLabel lblTienThua;
    private javax.swing.JLabel lblTongTienTatCa;
    private javax.swing.JLabel lblthongbaoloi;
    private javax.swing.JTable tblChiTietDV;
    private javax.swing.JTable tblDichVuNuoc;
    private javax.swing.JTable tblDoAn;
    private javax.swing.JTable tblGay;
    private javax.swing.JTextField txtHD;
    private javax.swing.JTextField txtMaBan;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtTienKD;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void loadTableNuoc() {
        model = (DefaultTableModel) tblDichVuNuoc.getModel();
        model.setRowCount(0);
        List<DichVu> list = DVservice.dichVuNuoc();
        for (DichVu s : list) {
            model.addRow(new Object[]{s.getTen(), s.getSoLuong(), s.getGia()});
        }
    }

    private void loadTableDoAn() {
        model2 = (DefaultTableModel) tblDoAn.getModel();
        model2.setRowCount(0);
        List<DichVu> list = DVservice.dichVuDoAn();
        for (DichVu s : list) {
            System.out.println(s);
            model2.addRow(new Object[]{s.getTen(), s.getSoLuong(), s.getGia()});
        }
    }

    private void loadTableGay() {
        model1 = (DefaultTableModel) tblGay.getModel();
        model1.setRowCount(0);
        List<DichVu> list = DVservice.dichGay();
        for (DichVu s : list) {
            model1.addRow(new Object[]{s.getTen(), s.getSoLuong(), s.getGia()});
        }
    }

    private void loadGioHang(List<GioHang> list) {

        for (GioHang gioHang : list) {
            tongTien += (gioHang.getGia() * gioHang.getSoLuong());

        }

        int column = 3; // giả sử cột cần tính tổng là cột thứ 2 (đánh số từ 0)
        for (int row = 0; row < tblChiTietDV.getRowCount(); row++) {
            tongTien += Double.parseDouble(tblChiTietDV.getValueAt(row, column).toString());
        }

        model3 = (DefaultTableModel) tblChiTietDV.getModel();
        model3.setRowCount(0);
        for (GioHang s : list) {
            model3.addRow(new Object[]{s.getDichVu(), s.getSoLuong(), s.getGia(), s.getGia() * s.getSoLuong()});
        }

    }

    private void addItem(GioHang item) {
        for (GioHang i : listGH) {
            if (i.getDichVu().equals(item.getDichVu())) {
                i.setSoLuong(i.getSoLuong() + item.getSoLuong());
                return;
            }
//            listGH.add(item);

        }
    }

    private void tinhTienDV() {
        double sum = 0.0;
        int columnn = 3; // Ví dụ: tính tổng của cột thứ 3
        for (int row = 0; row < tblChiTietDV.getRowCount(); row++) {
            double value = (double) tblChiTietDV.getValueAt(row, columnn);
            sum += value;
        }
        tongTienTatCa = sum + tongTienBan;
        lblTongTienTatCa.setText(String.valueOf(tongTienTatCa));
    }
}
