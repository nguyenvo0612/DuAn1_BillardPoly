/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import org.codehaus.groovy.ast.ClassNode;
import viewModel.BanChoiViewModel;
import viewModel.GioHang;

/**
 *
 * @author ADMIN
 */
public class QuanLyBanChoi extends javax.swing.JInternalFrame {

    BanChoiViewModel bTemp = new BanChoiViewModel();
    static BanChoiViewModel b1 = new BanChoiViewModel();
    static BanChoiViewModel b2 = new BanChoiViewModel();
    static BanChoiViewModel b3 = new BanChoiViewModel();
    static BanChoiViewModel b4 = new BanChoiViewModel();
    static BanChoiViewModel b5 = new BanChoiViewModel();
    static BanChoiViewModel b6 = new BanChoiViewModel();
    static BanChoiViewModel b7 = new BanChoiViewModel();
    static BanChoiViewModel b8 = new BanChoiViewModel();
    static BanChoiViewModel b9 = new BanChoiViewModel();
    static BanChoiViewModel b10 = new BanChoiViewModel();

    String ban = "01";
    String ban2 = "02";
    String ban3 = "03";
    String ban4 = "04";
    String ban5 = "05";
    String ban6 = "06";
    String ban7 = "07";
    String ban8 = "08";
    String ban9 = "09";
    String ban10 = "10";

    static List<GioHang> list = new ArrayList<>();
    static List<GioHang> list2 = new ArrayList<>();
    static List<GioHang> list3 = new ArrayList<>();
    static List<GioHang> list4 = new ArrayList<>();
    static List<GioHang> list5 = new ArrayList<>();
    static List<GioHang> list6 = new ArrayList<>();
    static List<GioHang> list7 = new ArrayList<>();
    static List<GioHang> list8 = new ArrayList<>();
    static List<GioHang> list9 = new ArrayList<>();
    static List<GioHang> list10 = new ArrayList<>();
    static List<GioHang> listTemp = new ArrayList<>();

    static String trangThai;

    
    public QuanLyBanChoi() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBan = new javax.swing.JPopupMenu();
        vaoBan = new javax.swing.JMenuItem();
        ketThucBan = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        chiTietBan = new javax.swing.JMenuItem();
        datBan = new javax.swing.JMenuItem();
        menuBan2 = new javax.swing.JPopupMenu();
        vaoBan2 = new javax.swing.JMenuItem();
        datBan1 = new javax.swing.JMenuItem();
        ketThucBan2 = new javax.swing.JMenuItem();
        chiTietBan2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        menuBan3 = new javax.swing.JPopupMenu();
        vaoBan3 = new javax.swing.JMenuItem();
        datBan3 = new javax.swing.JMenuItem();
        ketThucBan3 = new javax.swing.JMenuItem();
        chiTietBan3 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        menuBan4 = new javax.swing.JPopupMenu();
        vaoBan4 = new javax.swing.JMenuItem();
        datBan4 = new javax.swing.JMenuItem();
        ketThucBan4 = new javax.swing.JMenuItem();
        chiTietBan4 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        menuBan5 = new javax.swing.JPopupMenu();
        datBan5 = new javax.swing.JMenuItem();
        vaoBan5 = new javax.swing.JMenuItem();
        ketThucBan5 = new javax.swing.JMenuItem();
        chiTietBan5 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        menu6 = new javax.swing.JPopupMenu();
        datBan6 = new javax.swing.JMenuItem();
        vaoBan6 = new javax.swing.JMenuItem();
        ketThucBan6 = new javax.swing.JMenuItem();
        chiTietBan6 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        menu7 = new javax.swing.JPopupMenu();
        datBan7 = new javax.swing.JMenuItem();
        vaoBan7 = new javax.swing.JMenuItem();
        ketThucBan7 = new javax.swing.JMenuItem();
        chiTietBan7 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        menu8 = new javax.swing.JPopupMenu();
        datBan8 = new javax.swing.JMenuItem();
        vaoBan8 = new javax.swing.JMenuItem();
        ketThucBan8 = new javax.swing.JMenuItem();
        chiTietBan8 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        menu9 = new javax.swing.JPopupMenu();
        datBan9 = new javax.swing.JMenuItem();
        vaoBan9 = new javax.swing.JMenuItem();
        ketThucBan9 = new javax.swing.JMenuItem();
        chiTietBan9 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        menu10 = new javax.swing.JPopupMenu();
        datBan10 = new javax.swing.JMenuItem();
        vaoBan10 = new javax.swing.JMenuItem();
        ketThucBan10 = new javax.swing.JMenuItem();
        chiTietBan10 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jDesktopBanChoi = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        lblTrangThaiBan3 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        Ban10 = new javax.swing.JLabel();
        lblTrangThaiBan09 = new javax.swing.JLabel();
        lblTrangThaiBan01 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblTrangThaiBan02 = new javax.swing.JLabel();
        lblTrangThaiBan10 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        lblTrangThaiBan7 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        Ban6 = new javax.swing.JLabel();
        lblTrangThaiBan4 = new javax.swing.JLabel();
        lblBan01 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        Ban8 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        Ban1 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        Ban09 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        Ban3 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lblTrangThaiBan6 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        Ban02 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        lblBan02 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        Ban7 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        Ban05 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        lblTrangThaiBan8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Ban4 = new javax.swing.JLabel();
        lblTrangThaiBan5 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        vaoBan.setText("Vao ban");
        vaoBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBanActionPerformed(evt);
            }
        });
        menuBan.add(vaoBan);

        ketThucBan.setText("Ket Thuc Ban");
        ketThucBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBanActionPerformed(evt);
            }
        });
        menuBan.add(ketThucBan);

        jMenuItem3.setText("Huy Trang Thai");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        menuBan.add(jMenuItem3);

        chiTietBan.setText("Chi Tiet Ban");
        chiTietBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBanActionPerformed(evt);
            }
        });
        menuBan.add(chiTietBan);

        datBan.setText("Dat Ban");
        datBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBanActionPerformed(evt);
            }
        });
        menuBan.add(datBan);

        vaoBan2.setText("Vao ban");
        vaoBan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan2ActionPerformed(evt);
            }
        });
        menuBan2.add(vaoBan2);

        datBan1.setText("Dat Ban");
        datBan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan1ActionPerformed(evt);
            }
        });
        menuBan2.add(datBan1);

        ketThucBan2.setText("Ket Thuc Ban");
        ketThucBan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan2ActionPerformed(evt);
            }
        });
        menuBan2.add(ketThucBan2);

        chiTietBan2.setText("Chi Tiet Ban");
        chiTietBan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan2ActionPerformed(evt);
            }
        });
        menuBan2.add(chiTietBan2);

        jMenuItem6.setText("Huy Trang Thai");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        menuBan2.add(jMenuItem6);

        vaoBan3.setText("Vao ban");
        vaoBan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan3ActionPerformed(evt);
            }
        });
        menuBan3.add(vaoBan3);

        datBan3.setText("Dat Ban");
        datBan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan3ActionPerformed(evt);
            }
        });
        menuBan3.add(datBan3);

        ketThucBan3.setText("Ket Thuc Ban");
        ketThucBan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan3ActionPerformed(evt);
            }
        });
        menuBan3.add(ketThucBan3);

        chiTietBan3.setText("Chi Tiet Ban");
        chiTietBan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan3ActionPerformed(evt);
            }
        });
        menuBan3.add(chiTietBan3);

        jMenuItem8.setText("Huy Trang Thai");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        menuBan3.add(jMenuItem8);

        vaoBan4.setText("Vao ban");
        vaoBan4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan4ActionPerformed(evt);
            }
        });
        menuBan4.add(vaoBan4);

        datBan4.setText("Dat Ban");
        datBan4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan4ActionPerformed(evt);
            }
        });
        menuBan4.add(datBan4);

        ketThucBan4.setText("Ket Thuc Ban");
        ketThucBan4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan4ActionPerformed(evt);
            }
        });
        menuBan4.add(ketThucBan4);

        chiTietBan4.setText("Chi Tiet Ban");
        chiTietBan4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan4ActionPerformed(evt);
            }
        });
        menuBan4.add(chiTietBan4);

        jMenuItem10.setText("Huy Trang Thai");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        menuBan4.add(jMenuItem10);

        datBan5.setText("Dat Ban");
        datBan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan5ActionPerformed(evt);
            }
        });
        menuBan5.add(datBan5);

        vaoBan5.setText("Vao ban");
        vaoBan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan5ActionPerformed(evt);
            }
        });
        menuBan5.add(vaoBan5);

        ketThucBan5.setText("Ket Thuc Ban");
        ketThucBan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan5ActionPerformed(evt);
            }
        });
        menuBan5.add(ketThucBan5);

        chiTietBan5.setText("Chi Tiet Ban");
        chiTietBan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan5ActionPerformed(evt);
            }
        });
        menuBan5.add(chiTietBan5);

        jMenuItem12.setText("Huy Trang Thai");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        menuBan5.add(jMenuItem12);

        datBan6.setText("Dat Ban");
        datBan6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan6ActionPerformed(evt);
            }
        });
        menu6.add(datBan6);

        vaoBan6.setText("Vao ban");
        vaoBan6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan6ActionPerformed(evt);
            }
        });
        menu6.add(vaoBan6);

        ketThucBan6.setText("Ket Thuc Ban");
        ketThucBan6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan6ActionPerformed(evt);
            }
        });
        menu6.add(ketThucBan6);

        chiTietBan6.setText("Chi Tiet Ban");
        chiTietBan6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan6ActionPerformed(evt);
            }
        });
        menu6.add(chiTietBan6);

        jMenuItem13.setText("Huy Trang Thai");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        menu6.add(jMenuItem13);

        datBan7.setText("Dat Ban");
        datBan7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan7ActionPerformed(evt);
            }
        });
        menu7.add(datBan7);

        vaoBan7.setText("Vao ban");
        vaoBan7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan7ActionPerformed(evt);
            }
        });
        menu7.add(vaoBan7);

        ketThucBan7.setText("Ket Thuc Ban");
        ketThucBan7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan7ActionPerformed(evt);
            }
        });
        menu7.add(ketThucBan7);

        chiTietBan7.setText("Chi Tiet Ban");
        chiTietBan7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan7ActionPerformed(evt);
            }
        });
        menu7.add(chiTietBan7);

        jMenuItem14.setText("Huy Trang Thai");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        menu7.add(jMenuItem14);

        datBan8.setText("Dat Ban");
        datBan8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan8ActionPerformed(evt);
            }
        });
        menu8.add(datBan8);

        vaoBan8.setText("Vao ban");
        vaoBan8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan8ActionPerformed(evt);
            }
        });
        menu8.add(vaoBan8);

        ketThucBan8.setText("Ket Thuc Ban");
        ketThucBan8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan8ActionPerformed(evt);
            }
        });
        menu8.add(ketThucBan8);

        chiTietBan8.setText("Chi Tiet Ban");
        chiTietBan8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan8ActionPerformed(evt);
            }
        });
        menu8.add(chiTietBan8);

        jMenuItem15.setText("Huy Trang Thai");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        menu8.add(jMenuItem15);

        datBan9.setText("Dat Ban");
        datBan9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan9ActionPerformed(evt);
            }
        });
        menu9.add(datBan9);

        vaoBan9.setText("Vao ban");
        vaoBan9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan9ActionPerformed(evt);
            }
        });
        menu9.add(vaoBan9);

        ketThucBan9.setText("Ket Thuc Ban");
        ketThucBan9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan9ActionPerformed(evt);
            }
        });
        menu9.add(ketThucBan9);

        chiTietBan9.setText("Chi Tiet Ban");
        chiTietBan9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan9ActionPerformed(evt);
            }
        });
        menu9.add(chiTietBan9);

        jMenuItem16.setText("Huy Trang Thai");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        menu9.add(jMenuItem16);

        datBan10.setText("Dat Ban");
        datBan10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datBan10ActionPerformed(evt);
            }
        });
        menu10.add(datBan10);

        vaoBan10.setText("Vao ban");
        vaoBan10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaoBan10ActionPerformed(evt);
            }
        });
        menu10.add(vaoBan10);

        ketThucBan10.setText("Ket Thuc Ban");
        ketThucBan10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketThucBan10ActionPerformed(evt);
            }
        });
        menu10.add(ketThucBan10);

        chiTietBan10.setText("Chi Tiet Ban");
        chiTietBan10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiTietBan10ActionPerformed(evt);
            }
        });
        menu10.add(chiTietBan10);

        jMenuItem17.setText("Huy Trang Thai");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        menu10.add(jMenuItem17);

        setPreferredSize(new java.awt.Dimension(1320, 810));

        jDesktopBanChoi.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jDesktopBanChoiLayout = new javax.swing.GroupLayout(jDesktopBanChoi);
        jDesktopBanChoi.setLayout(jDesktopBanChoiLayout);
        jDesktopBanChoiLayout.setHorizontalGroup(
            jDesktopBanChoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jDesktopBanChoiLayout.setVerticalGroup(
            jDesktopBanChoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_chuyenban.png"))); // NOI18N
        jButton1.setText("Chuyển bàn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 650, 140, -1));

        lblTrangThaiBan3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan3.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan3.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 250, 210, -1));

        jPanel15.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addComponent(Ban10)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addComponent(Ban10)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 530, -1, -1));

        lblTrangThaiBan09.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan09.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan09.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan09, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 710, 210, -1));

        lblTrangThaiBan01.setBackground(new java.awt.Color(255, 255, 255));
        lblTrangThaiBan01.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan01.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan01.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan01, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 200, 20));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Quản lý bàn chơi");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, -1, -1));

        lblTrangThaiBan02.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan02.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan02.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan02, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 210, -1));

        lblTrangThaiBan10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan10.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan10.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 710, 210, 20));

        jLabel55.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 51, 0));
        jLabel55.setText("Bàn 4");
        jPanel1.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 230, -1, -1));

        lblTrangThaiBan7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan7.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan7.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan7, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 480, 210, -1));

        jPanel23.setBackground(new java.awt.Color(255, 51, 0));
        jPanel23.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(Ban6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(Ban6)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, -1, -1));

        lblTrangThaiBan4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan4.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan4.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 250, 210, -1));

        lblBan01.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblBan01.setForeground(new java.awt.Color(255, 51, 0));
        lblBan01.setText("Bàn 1");
        jPanel1.add(lblBan01, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 40, 20));

        jPanel21.setBackground(new java.awt.Color(255, 255, 153));
        jPanel21.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Ban8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(Ban8)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 300, -1, -1));

        jPanel18.setBackground(new java.awt.Color(255, 51, 51));
        jPanel18.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addComponent(Ban1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Ban1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jPanel14.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban09.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban09.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban09MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Ban09, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(Ban09)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, -1, -1));

        jPanel20.setBackground(new java.awt.Color(255, 51, 51));
        jPanel20.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(Ban3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(Ban3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 70, -1, -1));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("Bàn 8");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 460, -1, -1));

        lblTrangThaiBan6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan6.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan6.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 210, -1));

        jLabel58.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 51, 51));
        jLabel58.setText("Bàn 10");
        jPanel1.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 690, -1, 20));

        jPanel19.setBackground(new java.awt.Color(0, 153, 51));
        jPanel19.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban02.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban02MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(Ban02)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(Ban02)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));

        jLabel57.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 51, 51));
        jLabel57.setText("Bàn 5");
        jPanel1.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 460, -1, -1));

        jLabel42.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 51, 0));
        jLabel42.setText("Bàn 6");
        jPanel1.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, -1, -1));

        lblBan02.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblBan02.setForeground(new java.awt.Color(255, 51, 0));
        lblBan02.setText("Bàn 2");
        jPanel1.add(lblBan02, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, -1, -1));

        jLabel56.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 51, 0));
        jLabel56.setText("Bàn 9");
        jPanel1.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 690, -1, -1));

        jPanel22.setBackground(new java.awt.Color(255, 51, 51));
        jPanel22.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Ban7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(Ban7)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, -1, -1));

        jPanel13.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban05.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban05.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban05MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Ban05, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(Ban05)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 0, 0));
        jLabel38.setText("Bàn 3");
        jPanel1.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 230, -1, -1));

        lblTrangThaiBan8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan8.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan8.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 480, 210, -1));

        jPanel2.setPreferredSize(new java.awt.Dimension(275, 153));

        Ban4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banbida.jpg"))); // NOI18N
        Ban4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ban4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Ban4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Ban4)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 70, -1, -1));

        lblTrangThaiBan5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThaiBan5.setForeground(new java.awt.Color(0, 153, 51));
        lblTrangThaiBan5.setText("Trạng thái: Còn trống");
        jPanel1.add(lblTrangThaiBan5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 220, -1));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("Bàn 7");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 460, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_update.png"))); // NOI18N
        jButton2.setText("Làm mới");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 650, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopBanChoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopBanChoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vaoBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBanActionPerformed
        String status = lblTrangThaiBan01.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b1.setMaBan("B" + idRD);
        b1.setTongTien(0.0);
        b1.setTgBD(gioBatDau);
        b1.setTgKT("");
        b1.setMaHD(maHD);
        ThanhToan tt = new ThanhToan(b1, ban, list);
        tt.setVisible(true);
        lblTrangThaiBan01.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan01.setForeground(Color.red);
    }//GEN-LAST:event_vaoBanActionPerformed

    private void ketThucBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBanActionPerformed
        String status = lblTrangThaiBan01.getText();
        if(status.contains("Còn trống")) {
        
        }
        
        lblTrangThaiBan01.setText("Trạng thái: Còn trống");
        lblTrangThaiBan01.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b1.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b1.getTgBD());
            tg2 = sdf.parse(b1.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b1.setTongTien(tienChoi);
        ThanhToan tt = new ThanhToan(b1, ban, list);
        tt.setVisible(true);
    }//GEN-LAST:event_ketThucBanActionPerformed

    private void datBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBanActionPerformed
        DatBan datBan = new DatBan(ban); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBanActionPerformed

    private void Ban1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban1MouseClicked
        menuBan.show(Ban1, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban1MouseClicked

    private void Ban02MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban02MouseClicked
        menuBan2.show(Ban02, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban02MouseClicked

    private void datBan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan1ActionPerformed
        DatBan datBan = new DatBan(ban2); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan1ActionPerformed

    private void ketThucBan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan2ActionPerformed
        lblTrangThaiBan02.setText("Trạng thái: Còn trống");
        lblTrangThaiBan02.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b2.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b2.getTgBD());
            tg2 = sdf.parse(b2.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b2.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b2, ban2, list2);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan2ActionPerformed

    private void vaoBan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan2ActionPerformed
        String status = lblTrangThaiBan02.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b2.setMaBan("B" + idRD);
        b2.setTongTien(0.0);
        b2.setTgBD(gioBatDau);
        b2.setTgKT("");
        b2.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b2, ban2, list2);
        tt2.setVisible(true);
        lblTrangThaiBan02.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan02.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ChuyenBan cb = new ChuyenBan();
        cb.setVisible(true);
        cb.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void vaoBan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan3ActionPerformed
        String status = lblTrangThaiBan3.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b3.setMaBan("B"+idRD);
        b3.setTongTien(0.0);
        b3.setTgBD(gioBatDau);
        b3.setTgKT("");
        b3.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b3, ban3, list3);
        tt2.setVisible(true);
        lblTrangThaiBan3.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan3.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan3ActionPerformed

    private void datBan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan3ActionPerformed
        DatBan datBan = new DatBan(ban3); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan3ActionPerformed

    private void ketThucBan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan3ActionPerformed
        lblTrangThaiBan3.setText("Trạng thái: Còn trống");
        lblTrangThaiBan3.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b3.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b3.getTgBD());
            tg2 = sdf.parse(b3.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b3.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b3, ban3, list3);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan3ActionPerformed

    private void Ban3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban3MouseClicked
        menuBan3.show(Ban3, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban3MouseClicked

    private void vaoBan4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan4ActionPerformed
        String status = lblTrangThaiBan4.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b4.setMaBan("B" + idRD);
        b4.setTongTien(0.0);
        b4.setTgBD(gioBatDau);
        b4.setTgKT("");
        b4.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b4, ban4, list4);
        tt2.setVisible(true);
        lblTrangThaiBan4.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan4.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan4ActionPerformed

    private void datBan4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan4ActionPerformed
        DatBan datBan = new DatBan(ban4); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan4ActionPerformed

    private void ketThucBan4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan4ActionPerformed
        lblTrangThaiBan4.setText("Trạng thái: Còn trống");
        lblTrangThaiBan4.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b4.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b4.getTgBD());
            tg2 = sdf.parse(b4.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b4.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b4, ban4, list4);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan4ActionPerformed

    private void Ban4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban4MouseClicked
        menuBan4.show(Ban4, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban4MouseClicked

    private void datBan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan5ActionPerformed
        DatBan datBan = new DatBan(ban5); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan5ActionPerformed

    private void vaoBan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan5ActionPerformed
        String status = lblTrangThaiBan5.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        if(status.contains("duoc dat")) {
            JOptionPane.showMessageDialog(this, "Ban da duoc dat. Vui long chon ban khac");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b5.setMaBan("B" + idRD);
        b5.setTongTien(0.0);
        b5.setTgBD(gioBatDau);
        b5.setTgKT("");
        b5.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b5, ban5, list5);
        tt2.setVisible(true);
        lblTrangThaiBan5.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan5.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan5ActionPerformed

    private void ketThucBan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan5ActionPerformed
        lblTrangThaiBan5.setText("Trạng thái: Còn trống");
        lblTrangThaiBan5.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b5.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b5.getTgBD());
            tg2 = sdf.parse(b5.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b5.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b5, ban5, list5);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan5ActionPerformed

    private void chiTietBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBanActionPerformed
        ThanhToan tt2 = new ThanhToan(b1, ban, list);
        tt2.setVisible(true);
        lblTrangThaiBan01.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan01.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBanActionPerformed

    private void chiTietBan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan2ActionPerformed
        ThanhToan tt2 = new ThanhToan(b2, ban2, list2);
        tt2.setVisible(true);
        lblTrangThaiBan02.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan02.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan2ActionPerformed

    private void chiTietBan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan3ActionPerformed
        ThanhToan tt3 = new ThanhToan(b3, ban3, list3);
        tt3.setVisible(true);
        lblTrangThaiBan3.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan3.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan3ActionPerformed

    private void chiTietBan4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan4ActionPerformed
        ThanhToan tt4 = new ThanhToan(b4, ban4, list4);
        tt4.setVisible(true);
        lblTrangThaiBan4.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan4.setForeground(Color.red);    }//GEN-LAST:event_chiTietBan4ActionPerformed

    private void chiTietBan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan5ActionPerformed
        ThanhToan tt3 = new ThanhToan(b5 , ban5, list5);
        tt3.setVisible(true);
        lblTrangThaiBan5.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan5.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(b1.getMaHD() == null) {
            lblTrangThaiBan01.setText("Trạng thái: Còn trống");
            lblTrangThaiBan01.setForeground(new java.awt.Color(0, 153, 51));
        }else {
            lblTrangThaiBan01.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan01.setForeground(Color.RED);
        }
        if(b2.getMaHD() != null) {
            lblTrangThaiBan02.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan02.setForeground(Color.RED);
        }else {
            lblTrangThaiBan02.setText("Trạng thái: Còn trống");
            lblTrangThaiBan02.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b3.getMaHD() != null) {
            lblTrangThaiBan3.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan3.setForeground(Color.RED);
        }else {
            lblTrangThaiBan3.setText("Trạng thái: Còn trống");
            lblTrangThaiBan3.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b4.getMaHD() != null) {
            lblTrangThaiBan4.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan4.setForeground(Color.RED);
        }else {
            lblTrangThaiBan4.setText("Trạng thái: Còn trống");
            lblTrangThaiBan4.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b5.getMaHD() != null) {
            lblTrangThaiBan5.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan5.setForeground(Color.RED);
        }else {
            lblTrangThaiBan5.setText("Trạng thái: Còn trống");
            lblTrangThaiBan5.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b6.getMaHD() != null) {
            lblTrangThaiBan6.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan6.setForeground(Color.RED);
        }else {
            lblTrangThaiBan6.setText("Trạng thái: Còn trống");
            lblTrangThaiBan6.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b7.getMaHD() != null) {
            lblTrangThaiBan7.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan7.setForeground(Color.RED);
        }else {
            lblTrangThaiBan7.setText("Trạng thái: Còn trống");
            lblTrangThaiBan7.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b8.getMaHD() != null) {
            lblTrangThaiBan8.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan8.setForeground(Color.RED);
        }else {
            lblTrangThaiBan8.setText("Trạng thái: Còn trống");
            lblTrangThaiBan8.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b9.getMaHD() != null) {
            lblTrangThaiBan09.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan09.setForeground(Color.RED);
        }else {
            lblTrangThaiBan09.setText("Trạng thái: Còn trống");
            lblTrangThaiBan09.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b10.getMaHD() != null) {
            lblTrangThaiBan10.setText("Trạng thái: Đang chơi");
            lblTrangThaiBan10.setForeground(Color.RED);
        }else {
            lblTrangThaiBan10.setText("Trạng thái: Còn trống");
            lblTrangThaiBan10.setForeground(new java.awt.Color(0, 153, 51));
        }
        
        if(b1.getDatBan() != null) {
            lblTrangThaiBan01.setText("Ban da duoc dat "+b1.getDatBan());
            lblTrangThaiBan01.setForeground(Color.YELLOW);
        }
        if(b2.getDatBan() != null) {
            lblTrangThaiBan02.setText("Ban da duoc dat "+b2.getDatBan());
            lblTrangThaiBan02.setForeground(Color.YELLOW);
        }
        if(b3.getDatBan() != null) {
            lblTrangThaiBan3.setText("Ban da duoc dat "+b3.getDatBan());
            lblTrangThaiBan3.setForeground(Color.YELLOW);
        }
        if(b4.getDatBan() != null) {
            lblTrangThaiBan4.setText("Ban da duoc dat "+b4.getDatBan());
            lblTrangThaiBan4.setForeground(Color.YELLOW);
        }
        if(b5.getDatBan() != null) {
            lblTrangThaiBan5.setText("Ban da duoc dat "+b5.getDatBan());
            lblTrangThaiBan5.setForeground(Color.YELLOW);
            return;
        }
        if(b6.getDatBan() != null) {
            lblTrangThaiBan6.setText("Ban da duoc dat "+b6.getDatBan());
            lblTrangThaiBan6.setForeground(Color.YELLOW);
        }
        if(b7.getDatBan() != null) {
            lblTrangThaiBan7.setText("Ban da duoc dat "+b7.getDatBan());
            lblTrangThaiBan7.setForeground(Color.YELLOW);
        }
        if(b8.getDatBan() != null) {
            lblTrangThaiBan8.setText("Ban da duoc dat "+b8.getDatBan());
            lblTrangThaiBan8.setForeground(Color.YELLOW);
        }
        if(b9.getDatBan() != null) {
            lblTrangThaiBan09.setText("Ban da duoc dat "+b9.getDatBan());
            lblTrangThaiBan09.setForeground(Color.YELLOW);
        }
        if(b10.getDatBan() != null) {
            lblTrangThaiBan10.setText("Ban da duoc dat "+b10.getDatBan());
            lblTrangThaiBan10.setForeground(Color.YELLOW);
            return;
        }
        System.out.println(list.get(0).getDichVu());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Ban05MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban05MouseClicked
        menuBan5.show(Ban05, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban05MouseClicked

    private void datBan6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan6ActionPerformed
        DatBan datBan = new DatBan(ban6); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan6ActionPerformed

    private void vaoBan6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan6ActionPerformed
        String status = lblTrangThaiBan6.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b6.setMaBan("B" + idRD);
        b6.setTongTien(0.0);
        b6.setTgBD(gioBatDau);
        b6.setTgKT("");
        b6.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b6, ban6, list6);
        tt2.setVisible(true);
        lblTrangThaiBan6.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan6.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan6ActionPerformed

    private void ketThucBan6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan6ActionPerformed
        lblTrangThaiBan6.setText("Trạng thái: Còn trống");
        lblTrangThaiBan6.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b6.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b6.getTgBD());
            tg2 = sdf.parse(b6.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b6.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b6, ban6, list6);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan6ActionPerformed

    private void chiTietBan6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan6ActionPerformed
        ThanhToan tt4 = new ThanhToan(b6, ban6, list6);
        tt4.setVisible(true);
        lblTrangThaiBan6.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan6.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan6ActionPerformed

    private void datBan7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan7ActionPerformed
        DatBan datBan = new DatBan(ban7); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan7ActionPerformed

    private void vaoBan7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan7ActionPerformed
        String status = lblTrangThaiBan7.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b7.setMaBan("B" + idRD);
        b7.setTongTien(0.0);
        b7.setTgBD(gioBatDau);
        b7.setTgKT("");
        b7.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b7, ban7, list7);
        tt2.setVisible(true);
        lblTrangThaiBan7.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan7.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan7ActionPerformed

    private void ketThucBan7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan7ActionPerformed
        lblTrangThaiBan7.setText("Trạng thái: Còn trống");
        lblTrangThaiBan7.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b7.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b7.getTgBD());
            tg2 = sdf.parse(b7.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b7.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b7, ban7, list7);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan7ActionPerformed

    private void chiTietBan7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan7ActionPerformed
        ThanhToan tt4 = new ThanhToan(b7, ban7, list7);
        tt4.setVisible(true);
        lblTrangThaiBan7.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan7.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan7ActionPerformed

    private void datBan8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan8ActionPerformed
        DatBan datBan = new DatBan(ban8); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan8ActionPerformed

    private void vaoBan8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan8ActionPerformed
        String status = lblTrangThaiBan8.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b8.setMaBan("B" + idRD);
        b8.setTongTien(0.0);
        b8.setTgBD(gioBatDau);
        b8.setTgKT("");
        b8.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b8, ban8, list8);
        tt2.setVisible(true);
        lblTrangThaiBan8.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan8.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan8ActionPerformed

    private void ketThucBan8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan8ActionPerformed
        lblTrangThaiBan8.setText("Trạng thái: Còn trống");
        lblTrangThaiBan8.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b8.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b8.getTgBD());
            tg2 = sdf.parse(b8.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b8.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b8, ban8, list8);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan8ActionPerformed

    private void chiTietBan8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan8ActionPerformed
        ThanhToan tt4 = new ThanhToan(b8, ban8, list8);
        tt4.setVisible(true);
        lblTrangThaiBan8.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan8.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan8ActionPerformed

    private void datBan9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan9ActionPerformed
        DatBan datBan = new DatBan(ban9); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan9ActionPerformed

    private void vaoBan9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan9ActionPerformed
        String status = lblTrangThaiBan09.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b9.setMaBan("B" + idRD);
        b9.setTongTien(0.0);
        b9.setTgBD(gioBatDau);
        b9.setTgKT("");
        b9.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b9, ban9, list9);
        tt2.setVisible(true);
        lblTrangThaiBan09.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan09.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan9ActionPerformed

    private void ketThucBan9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan9ActionPerformed
        lblTrangThaiBan09.setText("Trạng thái: Còn trống");
        lblTrangThaiBan09.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b9.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b9.getTgBD());
            tg2 = sdf.parse(b9.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b9.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b9, ban9, list9);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan9ActionPerformed

    private void chiTietBan9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan9ActionPerformed
        ThanhToan tt4 = new ThanhToan(b9, ban9, list9);
        tt4.setVisible(true);
        lblTrangThaiBan09.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan09.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan9ActionPerformed

    private void datBan10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datBan10ActionPerformed
        DatBan datBan = new DatBan(ban10); 
        datBan.setVisible(true);
    }//GEN-LAST:event_datBan10ActionPerformed

    private void vaoBan10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaoBan10ActionPerformed
        String status = lblTrangThaiBan10.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Bàn đang chơi! Vui lòng chọn bàn khác!!!");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioBatDau = hour + ":" + minute + ":" + second;
        Random rd = new Random();
        int idRD = rd.nextInt(1000);
        String maHD = "HD" + idRD;
        b10.setMaBan("B" + idRD);
        b10.setTongTien(0.0);
        b10.setTgBD(gioBatDau);
        b10.setTgKT("");
        b10.setMaHD(maHD);
        ThanhToan tt2 = new ThanhToan(b10, ban10, list10);
        tt2.setVisible(true);
        lblTrangThaiBan10.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan10.setForeground(Color.red);
    }//GEN-LAST:event_vaoBan10ActionPerformed

    private void ketThucBan10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketThucBan10ActionPerformed
        lblTrangThaiBan10.setText("Trạng thái: Còn trống");
        lblTrangThaiBan10.setForeground(new java.awt.Color(0, 153, 51));
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        String gioKetThuc = hour + ":" + minute + ":" + second;
        b10.setTgKT(gioKetThuc);
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        Date tg1 = null;
        Date tg2 = null;
        try {
            tg1 = sdf.parse(b10.getTgBD());
            tg2 = sdf.parse(b10.getTgKT());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        long getDiff = tg2.getTime() - tg1.getTime();
        long getDaysDiff = TimeUnit.SECONDS.toSeconds(getDiff);
        int gioChoi = (int) (getDiff / 60000);
        Integer tienChoi1h = 1000;
        double tienChoi = gioChoi * tienChoi1h;
        b10.setTongTien(tienChoi);
        ThanhToan tt2 = new ThanhToan(b10, ban10, list10);
        tt2.setVisible(true);
    }//GEN-LAST:event_ketThucBan10ActionPerformed

    private void chiTietBan10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiTietBan10ActionPerformed
        ThanhToan tt4 = new ThanhToan(b10, ban10, list10);
        tt4.setVisible(true);
        lblTrangThaiBan10.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan10.setForeground(Color.red);
    }//GEN-LAST:event_chiTietBan10ActionPerformed

    private void Ban6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban6MouseClicked
        menu6.show(Ban6, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban6MouseClicked

    private void Ban7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban7MouseClicked
        menu7.show(Ban7, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban7MouseClicked

    private void Ban8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban8MouseClicked
        menu8.show(Ban8, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban8MouseClicked

    private void Ban09MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban09MouseClicked
        menu9.show(Ban09, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban09MouseClicked

    private void Ban10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ban10MouseClicked
        menu10.show(Ban10, evt.getX(), evt.getY());
    }//GEN-LAST:event_Ban10MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        String status = lblTrangThaiBan01.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan01.setText("Trạng thái: Còn trống");
        lblTrangThaiBan01.setForeground(new java.awt.Color(0, 153, 51));
        b1.setDatBan(null);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        String status = lblTrangThaiBan02.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan02.setText("Trạng thái: Còn trống");
        lblTrangThaiBan02.setForeground(new java.awt.Color(0, 153, 51));
        b2.setDatBan(null);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        String status = lblTrangThaiBan3.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan3.setText("Trạng thái: Còn trống");
        lblTrangThaiBan3.setForeground(new java.awt.Color(0, 153, 51));
        b3.setDatBan(null);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        String status = lblTrangThaiBan4.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan4.setText("Trạng thái: Còn trống");
        lblTrangThaiBan4.setForeground(new java.awt.Color(0, 153, 51));
        b4.setDatBan(null);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        String status = lblTrangThaiBan5.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan5.setText("Trạng thái: Còn trống");
        lblTrangThaiBan5.setForeground(new java.awt.Color(0, 153, 51));
        b5.setDatBan(null);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        String status = lblTrangThaiBan6.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan6.setText("Trạng thái: Còn trống");
        lblTrangThaiBan6.setForeground(new java.awt.Color(0, 153, 51));
        b6.setDatBan(null);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        String status = lblTrangThaiBan7.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan7.setText("Trạng thái: Còn trống");
        lblTrangThaiBan7.setForeground(new java.awt.Color(0, 153, 51));
        b7.setDatBan(null);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        String status = lblTrangThaiBan8.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan8.setText("Trạng thái: Còn trống");
        lblTrangThaiBan8.setForeground(new java.awt.Color(0, 153, 51));
        b8.setDatBan(null);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        String status = lblTrangThaiBan09.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan09.setText("Trạng thái: Còn trống");
        lblTrangThaiBan09.setForeground(new java.awt.Color(0, 153, 51));
        b9.setDatBan(null);
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        String status = lblTrangThaiBan10.getText();
        if(status.contains("Đang chơi")) {
            JOptionPane.showMessageDialog(this, "Không thể hủy trạng thái bàn!!!");
            return;
        }
        lblTrangThaiBan10.setText("Trạng thái: Còn trống");
        lblTrangThaiBan10.setForeground(new java.awt.Color(0, 153, 51));
        b10.setDatBan(null);
    }//GEN-LAST:event_jMenuItem17ActionPerformed
    public void getList(List<GioHang> listGH) {
        listGH = list;
    }

    static void swapBanChoi(String b1Text, String b2Text) {
        QuanLyBanChoi qlbc = new QuanLyBanChoi();
        BanChoiViewModel b1S = qlbc.searchBan(b1Text);
        BanChoiViewModel b2S = qlbc.searchBan(b2Text);

        List<GioHang> list1 = qlbc.searchGHBan(b1Text);
        List<GioHang> list2 = qlbc.searchGHBan(b2Text);

        qlbc.bTemp = b1S;
        b1S = b2S;
        b2S = qlbc.bTemp;

        listTemp = list1;
        list1 = list2;
        list2 = listTemp;

        qlbc.mapBan(b1S, b1Text);
        qlbc.mapBan(b2S, b2Text);

        qlbc.mapGHBan(list1, b1Text);
        qlbc.mapGHBan(list2, b2Text);

//        qlbc.chuyenTrangThai();

        System.out.println(b1);
        System.out.println(b2);
        JOptionPane.showMessageDialog(qlbc, "Chuyển bàn thành công!");
    }

    public void chuyenTrangThai() {
        lblTrangThaiBan02.setText("Trạng thái: Đang chơi");
        lblTrangThaiBan02.setForeground(Color.RED);
    }
    
    public List<GioHang> searchGHBan(String maB) {
        if (maB.contains("1")) {
            return QuanLyBanChoi.list;
        } else if (maB.contains("2")) {
            return QuanLyBanChoi.list2;
        } else if (maB.contains("3")) {
            return QuanLyBanChoi.list3;
        } else if (maB.contains("4")) {
            return QuanLyBanChoi.list4;
        } else if (maB.contains("5")) {
            return QuanLyBanChoi.list5;
        } else if (maB.contains("6")) {
            return QuanLyBanChoi.list6;
        } else if (maB.contains("7")) {
            return QuanLyBanChoi.list7;
        } else if (maB.contains("8")) {
            return QuanLyBanChoi.list8;
        } else if (maB.contains("9")) {
            return QuanLyBanChoi.list9;
        } else if (maB.contains("10")) {
            return QuanLyBanChoi.list10;
        }
        return null;
    }

    public void mapGHBan(List<GioHang> listT, String banString) {
        if (banString.contains("1")) {
            list = listT;
        } else if (banString.contains("2")) {
            list2 = listT;
        } else if (banString.contains("3")) {
            list3 = listT;
        } else if (banString.contains("4")) {
            list4 = listT;
        } else if (banString.contains("5")) {
            list5 = listT;
        } else if (banString.contains("6")) {
            list6 = listT;
        } else if (banString.contains("7")) {
            list7 = listT;
        } else if (banString.contains("8")) {
            list8 = listT;
        } else if (banString.contains("9")) {
            list9 = listT;
        } else if (banString.contains("10")) {
            list10 = listT;
        }
    }

    static void datBan(String sdt) {
        QuanLyBanChoi qlbc = new QuanLyBanChoi();
        qlbc.setTrangThai(sdt);
    }
    
    public void setTrangThai(String sdt) {
        lblTrangThaiBan01.setText(sdt);
    }
    
    public void mapBan(BanChoiViewModel b, String banString) {
        if (banString.contains("1")) {
            b1 = b;
        } else if (banString.contains("2")) {
            b2 = b;
        } else if (banString.contains("3")) {
            b3 = b;
        } else if (banString.contains("4")) {
            b4 = b;
        } else if (banString.contains("5")) {
            b5 = b;
        } else if (banString.contains("6")) {
            b6 = b;
        } else if (banString.contains("7")) {
            b7 = b;
        } else if (banString.contains("8")) {
            b8 = b;
        } else if (banString.contains("9")) {
            b9 = b;
        } else if (banString.contains("10")) {
            b10 = b;
        }
    }

    public BanChoiViewModel searchBan(String maB) {
        if (maB.contains("1")) {
            return QuanLyBanChoi.b1;
        } else if (maB.contains("2")) {
            return QuanLyBanChoi.b2;
        } else if (maB.contains("3")) {
            return QuanLyBanChoi.b3;
        } else if (maB.contains("4")) {
            return QuanLyBanChoi.b4;
        } else if (maB.contains("5")) {
            return QuanLyBanChoi.b5;
        } else if (maB.contains("6")) {
            return QuanLyBanChoi.b6;
        } else if (maB.contains("7")) {
            return QuanLyBanChoi.b7;
        } else if (maB.contains("8")) {
            return QuanLyBanChoi.b8;
        } else if (maB.contains("9")) {
            return QuanLyBanChoi.b9;
        } else if (maB.contains("10")) {
            return QuanLyBanChoi.b10;
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ban02;
    private javax.swing.JLabel Ban05;
    private javax.swing.JLabel Ban09;
    private javax.swing.JLabel Ban1;
    private javax.swing.JLabel Ban10;
    private javax.swing.JLabel Ban3;
    private javax.swing.JLabel Ban4;
    private javax.swing.JLabel Ban6;
    private javax.swing.JLabel Ban7;
    private javax.swing.JLabel Ban8;
    private javax.swing.JMenuItem chiTietBan;
    private javax.swing.JMenuItem chiTietBan10;
    private javax.swing.JMenuItem chiTietBan2;
    private javax.swing.JMenuItem chiTietBan3;
    private javax.swing.JMenuItem chiTietBan4;
    private javax.swing.JMenuItem chiTietBan5;
    private javax.swing.JMenuItem chiTietBan6;
    private javax.swing.JMenuItem chiTietBan7;
    private javax.swing.JMenuItem chiTietBan8;
    private javax.swing.JMenuItem chiTietBan9;
    private javax.swing.JMenuItem datBan;
    private javax.swing.JMenuItem datBan1;
    private javax.swing.JMenuItem datBan10;
    private javax.swing.JMenuItem datBan3;
    private javax.swing.JMenuItem datBan4;
    private javax.swing.JMenuItem datBan5;
    private javax.swing.JMenuItem datBan6;
    private javax.swing.JMenuItem datBan7;
    private javax.swing.JMenuItem datBan8;
    private javax.swing.JMenuItem datBan9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopBanChoi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JMenuItem ketThucBan;
    private javax.swing.JMenuItem ketThucBan10;
    private javax.swing.JMenuItem ketThucBan2;
    private javax.swing.JMenuItem ketThucBan3;
    private javax.swing.JMenuItem ketThucBan4;
    private javax.swing.JMenuItem ketThucBan5;
    private javax.swing.JMenuItem ketThucBan6;
    private javax.swing.JMenuItem ketThucBan7;
    private javax.swing.JMenuItem ketThucBan8;
    private javax.swing.JMenuItem ketThucBan9;
    private javax.swing.JLabel lblBan01;
    private javax.swing.JLabel lblBan02;
    private javax.swing.JLabel lblTrangThaiBan01;
    private javax.swing.JLabel lblTrangThaiBan02;
    private javax.swing.JLabel lblTrangThaiBan09;
    private javax.swing.JLabel lblTrangThaiBan10;
    private javax.swing.JLabel lblTrangThaiBan3;
    private javax.swing.JLabel lblTrangThaiBan4;
    private javax.swing.JLabel lblTrangThaiBan5;
    private javax.swing.JLabel lblTrangThaiBan6;
    private javax.swing.JLabel lblTrangThaiBan7;
    private javax.swing.JLabel lblTrangThaiBan8;
    private javax.swing.JPopupMenu menu10;
    private javax.swing.JPopupMenu menu6;
    private javax.swing.JPopupMenu menu7;
    private javax.swing.JPopupMenu menu8;
    private javax.swing.JPopupMenu menu9;
    private javax.swing.JPopupMenu menuBan;
    private javax.swing.JPopupMenu menuBan2;
    private javax.swing.JPopupMenu menuBan3;
    private javax.swing.JPopupMenu menuBan4;
    private javax.swing.JPopupMenu menuBan5;
    private javax.swing.JMenuItem vaoBan;
    private javax.swing.JMenuItem vaoBan10;
    private javax.swing.JMenuItem vaoBan2;
    private javax.swing.JMenuItem vaoBan3;
    private javax.swing.JMenuItem vaoBan4;
    private javax.swing.JMenuItem vaoBan5;
    private javax.swing.JMenuItem vaoBan6;
    private javax.swing.JMenuItem vaoBan7;
    private javax.swing.JMenuItem vaoBan8;
    private javax.swing.JMenuItem vaoBan9;
    // End of variables declaration//GEN-END:variables
}
